{"name":"StaMa","tagline":"State Machine Controller Library","body":"### What is StaMa?\r\nA UML and Statechart inspired state machine library with hierarchical and orthogonal states.  \r\nImplemented in C#.  \r\nThe portable assembly runs on Windows platforms (including UWP) and Mono. [NETMF](http://www.netmf.com/) is supported through a separate assembly.  \r\n\r\n### Features\r\nProvides a state machine execution environment that serves as a foundation for both plain state machines as well as complex state machines with hierarchical (composite) and orthogonal (concurrent) states.  \r\nFork and join transitions.  \r\nEntry-, exit-, do- and transition-actions.  \r\nGuard conditions.  \r\nShallow history.  \r\nRun-to-completion processing.  \r\nProvides Statecharts functionality comparable to SCXML.  \r\nLow garbage object creation during runtime.  \r\nFree from runtime thread synchronization calls and timers.  \r\nMultiple state machine instances can be created from a single state machine definition.  \r\nOptional code generation based on Microsoft Visio diagrams.  \r\nDelivered as  \r\n - Portable assembly for .NET Framework 4, Silverlight 5, Windows 8, Windows Phone 8.1, Windows Phone Silverlight 8 and higher versions, runs on Mono.  \r\n - Assembly for .NET Micro Framework 4.3  \r\nDetailed description on http://StaMa.org/.  \r\n\r\n### Links\r\n[Repository on CodePlex](https://stama.codeplex.com/)  \r\n[NuGet Download](http://www.nuget.org/packages/StaMa.StateMachine/)  \r\n[Description](http://StaMa.org/)  \r\n\r\n### Author, Support and Contact\r\n@roland-schneider  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}